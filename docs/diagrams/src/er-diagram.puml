@startuml
entity Role {
  +id : uuid
  +type : RoleType 
  +description : string
}

enum RoleType {
  CLIENT
  SPECIALIST
  ORGANIZATION_OWNER
  ADMIN
  MANAGER
  MODERATOR
}

entity UserRole {
  +id : uuid
  +userId : uuid
  +roleId : uuid
  +organizationId : uuid // опционально, для ролей в контексте организации
  --
  +created_at : datetime
  +updated_at : datetime
}

entity User {
  +id : uuid
  +name : string
  +email : string
  +phone : string
  +first_name : string
  +middle_name : string
  +last_name : string
  +birth_date : date
  +gender : Gender
  +timezone : string
  --
  +created_at : datetime
  +updated_at : datetime
}
note right of User
  1) возможность указать несколько номеров
  2) отчество
  3) соц. сети
end note

enum Gender {
  MALE
  FEMALE
  UNSPECIFIED
}

entity ClientProfile {
  +id : uuid
  +userId : uuid
  +organizationId : uuid // nullable, контекст профиля
  +preferences : json // предпочтения клиента
  --
  +created_at : datetime
  +updated_at : datetime
}

entity SpecialistProfile {
  +id : uuid
  +userId : uuid
  +organizationId : uuid // nullable, контекст профиля
  +bio : string
  +certifications : json
  --
  +created_at : datetime
  +updated_at : datetime
}

entity OwnerProfile {
  +id : uuid
  +userId : uuid
  +organizationId : uuid // контекст профиля
  +business_type : string // тип бизнеса (например, fitness, education)
  +settings : json // настройки управления
  --
  +created_at : datetime
  +updated_at : datetime
}

entity AdminProfile {
  +id : uuid
  +userId : uuid
  +permissions : json // глобальные права (например, user_management, moderation)
  --
  +created_at : datetime
  +updated_at : datetime
}

entity ManagerProfile {
  +id : uuid
  +userId : uuid
  +organizationId : uuid // контекст профиля
  +managed_venues : json // список управляемых Venue
  +responsibilities : json // обязанности (например, scheduling, specialist_assignment)
  --
  +created_at : datetime
  +updated_at : datetime
}

entity ModeratorProfile {
  +id : uuid
  +userId : uuid
  +organizationId : uuid // nullable, глобальный или локальный
  +moderation_scopes : json // области модерации (например, specialist_registration, event_content)
  --
  +created_at : datetime
  +updated_at : datetime
}

entity Organization {
  +id : uuid
  +name : string
  --
  +description : text
  +logo_url : string
  +website : string
  +phone : string
  +email : string
  +timezone : string
  --
  +created_at : datetime
  +updated_at : datetime
}
note right of Organization
  1) несколько номеров, email'ов
  2) соц. сети
end note

entity Venue {
  +id : uuid
  +organizationId : uuid
  +name : string
  --
  +address : string
  +description : text
  +phone : string
  +email : string
  +timezone : string
  +latitude : float
  +longitude : float
  +working_hours : json
  --
  +created_at : datetime
  +updated_at : datetime
}

entity Space {
  +id : uuid
  +venueId : uuid
  +name : string
  +capacity? : int
  +floor? : int
  --
  +created_at : datetime
  +updated_at : datetime
}

entity Availability {
  +id : uuid
  +venueId? : uuid
  +spaceId? : uuid
  +userId? : uuid
  +rules : json // единый формат правил записи
  --
  +created_at : datetime
  +updated_at : datetime
}
note right of Availability
  Хранит правила записи для Venue, Space, Specialist
  в формате JSON (intervals, exceptions, recurrence_rule)
end note

enum EventStatus {
  PLANNED
  CONFIRMED
  IN_PROGRESS
  COMPLETED
  CANCELED
  POSTPONED
}

enum EventVisibility {
  PUBLIC
  PRIVATE
  SERVICE 
}

enum EventDelivery {
  OFFLINE
  ONLINE
  HYBRID
  NONE
}

enum ParticipantMode {
  GROUP
  PERSONAL
}

entity EventType {
  +id : uuid
  +name : string
  --
  +created_at : datetime
}

note right of EventType
  TRIAL
  CONSULTATION
  VACATION
  LESSON
  WORKSHOP
  CLASS
  MASTER_CLASS
  TRAINING
  COMPETITION
  MATCH
  SESSION
  COACHING
  SEMINAR
  MAINTENANCE
end note

entity Event {
  +id : uuid
  +event_request_id : String?
  +space_id : uuid
  +title : string
  +description : text?
  +interval : Json
  +timezone : String
  +recurrence_rule : Json?
  +status : EventStatus
  +price : int?
  --
  +specialist_id : uuid
  +type_id : uuid
  +participant_mode : ParticipantMode
  +visibility : EventVisibility
  +delivery : EventDelivery
  +max_participants : int
  +is_recurring : boolean
  +cancellation_reason : string
  --
  +created_at : datetime
  +updated_at : datetime
}

enum AccessibilityType {
  STAFF_ONLY
  CLIENT_REQUESTABLE
  SHARED
}

entity EventTemplate {
  +id : uuid
  +title : string
  +description? : text
  +duration : int // в минутах
  +price? : int
  +is_active : boolean
  +space_ids : string[]
  --
  +auto_confirm? : Boolean // Автоматическое подтверждение для специалистов фрилансеров
  +accessibility : AccessibilityType
  +specialist_id : uuid
  +type_id : uuid
  +participant_mode : ParticipantMode
  +delivery : EventDelivery
  +visibility : EventVisibility
  +platform_link : string // для ONLINE, HYBRID
  +difficulty_level : string
  --
  +created_at : datetime
}
note right of EventTemplate
  Шаблоны:
  - Клиентские: accessibility = CLIENT_REQUESTABLE (TRIAL)
  - Личные: accessibility = STAFF_ONLY (VACATION)
end note

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELED
  COMPLETED
}

entity Booking {
  +id : uuid
  +eventId? : uuid
  +template_id : uuid
  +status : BookingStatus
  +start_date : datetime
  +comment : text
  --
  +client_id : uuid
  +specialist_id : uuid
  --
  +created_at : datetime
}
note top of Booking
  Запись — заявка клиента 
  на событие по шаблону, 
  требующая или не требующая
  подтверждения специалистом
end note

enum EventRequestStatus {
  PENDING
  CONFIRMED
  REJECTED
  CANCELED
}

entity EventRequest {
  +id : uuid
  +event_template_id : uuid
  +preferred_time : datetime?
  
  +title_snapshot : string
  +description_snapshot : string?
  +duration_snapshot : int
  +price_snapshot : int?

  +status : EventRequestStatus
  +comment : string?
  +response_comment : string?
  
  +created_at : datetime
  +updated_at : datetime
}

' Связи
EventType ||--o{ Event : defines
User ||--o{ UserRole : has
Role ||--o{ UserRole : assigned_to
Organization ||--o{ UserRole : scoped_to

User ||--o{ ClientProfile : has
User ||--o{ SpecialistProfile : has
User ||--o{ OwnerProfile : has
User ||--o{ AdminProfile : has
User ||--o{ ManagerProfile : has
User ||--o{ ModeratorProfile : has
Organization ||--o{ ClientProfile : scoped_to
Organization ||--o{ SpecialistProfile : scoped_to
Organization ||--o{ OwnerProfile : scoped_to
Organization ||--o{ ManagerProfile : scoped_to
Organization ||--o{ ModeratorProfile : scoped_to

User ||--o{ Organization : owns
User ||--o{ Event : teaches
User ||--o{ Booking : makes
User ||--o{ EventRequest : creates // Добавлено: пользователь (клиент) создает запрос

Organization ||--o{ Venue : has
Venue ||--o{ Space : contains

Space ||--o{ Event : hosts

Event ||--o{ Booking : has
EventTemplate ||--o{ Event : generates
EventTemplate ||--o{ Booking : used_by
EventTemplate ||--o{ EventRequest : used_by // Добавлено: шаблон используется запросом
EventType ||--o{ EventTemplate : defines
User ||--o{ EventTemplate : creates

EventTemplate ||--o{ AccessibilityType : uses
EventRequest ||--o{ EventRequestStatus : uses // Добавлено: статус запроса

Event ||--o{ EventDelivery : uses
Event ||--o{ EventVisibility : uses
Event ||--o{ EventStatus : uses
Event ||--o{ ParticipantMode : uses
Booking ||--o{ BookingStatus : uses
Role ||--o{ RoleType : uses
User ||--o{ Gender : uses

Venue ||--o{ Availability : has
Space ||--o{ Availability : has
User ||--o{ Availability : has
Organization ||--o{ Availability : scoped_to
@enduml